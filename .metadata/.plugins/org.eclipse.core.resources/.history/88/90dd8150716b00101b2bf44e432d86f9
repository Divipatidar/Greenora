package com.cdac.service;

import org.modelmapper.ModelMapper;
import org.springframework.stereotype.Service;

import com.cdac.custom_exception.InvalidInputException;
import com.cdac.custom_exception.ResourseNotFoundException;
import com.cdac.dao.UserDao;
import com.cdac.dto.SignUpReqDto;
import com.cdac.dto.UserDto;
import com.cdac.entities.User;

import jakarta.transaction.Transactional;
import lombok.AllArgsConstructor;

@Service
@Transactional
@AllArgsConstructor
public class UserServiceImpl implements UserService {
	
	private final UserDao userdao;
	private final ModelMapper modalmapper;
	
     
	@Override
	public UserDto registerUser(SignUpReqDto dto) {
		 if(userdao.existsByEmail(dto.getEmail())) {
			 throw new InvalidInputException("user already exist by email!!!!");
		 }
		 User user = modalmapper.map(dto, User.class);
		 User userpersitent = userdao.save(user);
		return  modalmapper.map(userpersitent, UserDto.class);
	}

	@Override
	public User login(String email, String password) {
		User user = userdao.findByEmail(email).orElseThrow(()-> 
		new ResourseNotFoundException("emaill not found!!!"));
		
		if(user.getPassword().equals(password)) {
			throw new ResourseNotFoundException("password  not match!!!");
		}
		return user;
	}

	@Override
	public User updateProfile(Long userId, UserDto dto) {
		User user = userdao.findById(userId).orElseThrow(()-> 
		new ResourseNotFoundException("id not found!!!"));
		modalmapper.map(dto, user);
		return user;
	}

	@Override
	public User getUserById(Long userId) {
		User user = userdao.findById(userId).orElseThrow(()-> 
		new ResourseNotFoundException("id not found!!!"));
		return user;
	}

}
